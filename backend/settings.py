"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-j$(!9-3hps)f8)2pebdh))aifu^a#7xy1t&k-kwfl*ifl==myp"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "usuario",
    "momento_com_deus",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

BANCO_DE_DADOS = {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': config('BD_NAME'),
    'USER': config('BD_USER'),
    'PASSWORD': config('BD_PASS'),
    'HOST': config('BD_HOST', default='localhost'),
    'PORT': config('BD_PORT', default='5432'),
}

DATABASES = {
    "default": BANCO_DE_DADOS
    # "default": {
    #     "ENGINE": "django.db.backends.sqlite3",
    #     "NAME": BASE_DIR / "db.sqlite3",
    # }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Autenticacao da API
TOKEN_API=config("API_KEY")

REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        'backend.permissions.TokenGlobalValido',
    ]
}


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# novo modelo: usuario
AUTH_USER_MODEL = "usuario.Usuario"






#===============================================================================#=
                                                                                #=
# VALIDAR CONEXAO COM O BD                                                      #=
def verificar_conexao():                                                        #=
    try:                                                                        #=
        import psycopg2                                                         #=
        conexao = psycopg2.connect(                                             #=
            dbname=BANCO_DE_DADOS['NAME'],                                      #=
            user=BANCO_DE_DADOS['USER'],                                        #=
            password=BANCO_DE_DADOS['PASSWORD'],                                #=
            host=BANCO_DE_DADOS['HOST'],                                        #=
            port=BANCO_DE_DADOS['PORT']                                         #=
        )                                                                       #=
        print("CONEXÃO CRIADA COM SUCESSO")                                     #=
        conexao.close()                                                         #=
    except Exception as erro:                                                   #=
        print("Erro na Verificação de Conexão com o BD:\n{}".format(erro))      #=
                                                                                #=
verificar_conexao()                                                             #=
                                                                                #=
#===============================================================================#=
